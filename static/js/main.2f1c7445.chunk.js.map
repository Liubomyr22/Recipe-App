{"version":3,"sources":["Recipe.module.css","Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Recipe","title","img","className","s","border","src","alt","App","useState","recipe","setRecipes","input","setInput","search","setSearch","useEffect","fetch","then","response","json","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","map","x","label","image","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,OAAS,yB,+JCYZC,EAVA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpB,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACA,qBAAKC,IAAKJ,EAAKK,IAAI,KAClB,6BAAKN,IACL,gDCmCMO,MAvCf,WAEE,IAFa,EAKeC,mBAAS,IALxB,mBAKNC,EALM,KAKCC,EALD,OAMYF,mBAAS,IANrB,mBAMNG,EANM,KAMAC,EANA,OAOcJ,mBAAS,WAPvB,mBAONK,EAPM,KAOCC,EAPD,KA0Bb,OAjBAC,qBAAU,WACRC,MAAM,mCAAD,OAAoCH,EAApC,mBARQ,WAQR,oBAPS,mCAOT,uDACFI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUT,EAAWS,EAAKC,WAClC,CAACP,IAYJQ,QAAQC,IAAIb,GAET,sBAAKP,UAAU,MAAf,UACE,uBAAMqB,SARQ,SAAAC,GAChBA,EAAEC,iBACFX,EAAUH,IAMR,UACE,uBAAOe,KAAK,OAAOC,MAAOhB,EAAOiB,SAdnB,SAAAJ,GAClBA,EAAEC,iBACFb,EAASY,EAAEK,OAAOF,UAad,wBAAQD,KAAK,SAAb,uBAEDjB,EAAOqB,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAA6B/B,MAAO+B,EAAEtB,OAAOuB,MAAO/B,IAAK8B,EAAEtB,OAAOwB,OAArDF,EAAEtB,OAAOuB,cCzBhBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2f1c7445.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Recipe_border__2EUE4\"};","import React from 'react';\r\nimport s from './Recipe.module.css'\r\n\r\nconst Recipe = ({title ,img}) => {\r\n    return(\r\n        <div className={s.border}>\r\n        <img src={img} alt=\"\" />\r\n         <h1>{title}</h1>\r\n         <p>description</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\nfunction App() {\n\n  const APP_ID = \"d01fb558\";\n  const APP_KEY = \"5abb39770df019567fece047ab50855f\";\n\n  const [recipe,setRecipes] = useState([]);\n  const [input,setInput] = useState('')\n  const [search,setSearch] = useState('chicken')\n  \n  useEffect(() => {\n    fetch(`https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=10&calories=591-722&health=alcohol-free`)\n      .then((response) => response.json())\n      .then((json) => setRecipes(json.hits));\n  },[search])\n\n  const updateInput = e =>{\n    e.preventDefault()\n    setInput(e.target.value)\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setSearch(input)\n  }\n\n console.log(recipe)\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch}>\n        <input type=\"text\" value={input} onChange={updateInput} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {recipe.map((x) => (\n         <Recipe key={x.recipe.label} title={x.recipe.label} img={x.recipe.image} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}