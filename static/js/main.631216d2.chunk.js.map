{"version":3,"sources":["Recipe.module.css","Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Recipe","title","img","calories","ingredients","className","s","item","content","imgAndCalories","src","alt","description","map","ingredient","text","color","App","useState","recipe","setRecipes","input","setInput","search","setSearch","loader","setLoader","useEffect","fetch","then","response","json","hits","onSubmit","e","preventDefault","type","value","onChange","target","x","label","image","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,wBAAwB,YAAc,4BAA4B,eAAiB,iC,kKCyB5HC,EAvBA,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,IAAIC,EAA0B,EAA1BA,SAASC,EAAiB,EAAjBA,YACjC,OAEI,sBAAKC,UAAWC,IAAEC,KAAlB,UACA,6BAAKN,IACL,sBAAKI,UAAWC,IAAEE,QAAlB,UACA,sBAAKH,UAAWC,IAAEG,eAAlB,UACA,qBAAKC,IAAKR,EAAKS,IAAI,KAClB,gDAAiBR,QAEjB,qBAAKE,UAAWC,IAAEM,YAAlB,SACKR,EAAYS,KAAI,SAAAC,GAAU,OACvB,6BACI,6BAAKA,EAAWC,iBAK5B,oBAAIC,MAAM,YCoCJC,MArDf,WAEE,IAFa,EAKeC,mBAAS,IALxB,mBAKNC,EALM,KAKCC,EALD,OAMYF,mBAAS,IANrB,mBAMNG,EANM,KAMAC,EANA,OAOcJ,mBAAS,WAPvB,mBAONK,EAPM,KAOCC,EAPD,OAQcN,oBAAS,GARvB,mBAQNO,EARM,KAQCC,EARD,KA6Bb,OAnBAC,qBAAU,WACRC,MAAM,mCAAD,OAAoCL,EAApC,mBATQ,WASR,oBARS,mCAQT,uDACFM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUX,EAAWW,EAAKC,SAC/BH,KAAKH,GAAU,MAElB,CAACH,IAeD,sBAAKlB,UAAU,MAAf,UACA,8BACE,uBAAM4B,SAVQ,SAAAC,GAChBA,EAAEC,iBACFX,EAAUH,IAQR,UACE,uBAAOe,KAAK,OAAOC,MAAOhB,EAAOiB,SAhBnB,SAAAJ,GAClBA,EAAEC,iBACFb,EAASY,EAAEK,OAAOF,UAed,wBAAQD,KAAK,SAAb,yBAIF,gCACCX,GAAU,aACVN,EAAON,KAAI,SAAC2B,GAAD,OACV,8BACC,cAAC,EAAD,CAA6BvC,MAAOuC,EAAErB,OAAOsB,MAAOvC,IAAKsC,EAAErB,OAAOuB,MAClEvC,SAAUqC,EAAErB,OAAOhB,SAAUC,YAAaoC,EAAErB,OAAOf,aADtCoC,EAAErB,OAAOsB,mBCnChBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.631216d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Recipe_item__3gNBW\",\"content\":\"Recipe_content__2kidH\",\"description\":\"Recipe_description__1KBrN\",\"imgAndCalories\":\"Recipe_imgAndCalories__39ROT\"};","import React from 'react';\r\nimport s from './Recipe.module.css'\r\n\r\nconst Recipe = ({title ,img,calories,ingredients}) => {\r\n    return(\r\n        \r\n        <div className={s.item}>\r\n        <h1>{title}</h1>\r\n        <div className={s.content}>\r\n        <div className={s.imgAndCalories}>\r\n        <img src={img} alt=\"\" />\r\n         <p>{`Calories: ${calories}`}</p>\r\n         </div>\r\n         <div className={s.description}>\r\n             {ingredients.map(ingredient => (\r\n                 <ul>\r\n                     <li>{ingredient.text}</li>\r\n                 </ul>\r\n             ))}\r\n         </div>\r\n         </div>\r\n         <hr color=\"red\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\nfunction App() {\n\n  const APP_ID = \"d01fb558\";\n  const APP_KEY = \"5abb39770df019567fece047ab50855f\";\n\n  const [recipe,setRecipes] = useState([]);\n  const [input,setInput] = useState('')\n  const [search,setSearch] = useState('chicken')\n  const [loader,setLoader] = useState(true)\n  \n  useEffect(() => {\n    fetch(`https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=10&calories=591-722&health=alcohol-free`)\n      .then((response) => response.json())\n      .then((json) => setRecipes(json.hits))\n      .then(setLoader(false))\n      // setLoader(false)\n  },[search])\n\n  const updateInput = e =>{\n    e.preventDefault()\n    setInput(e.target.value)\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setSearch(input)\n  }\n\n//  console.log(recipe)\n  return ( \n    \n    <div className=\"App\">\n    <div>\n      <form onSubmit={getSearch}>\n        <input type=\"text\" value={input} onChange={updateInput} />\n        <button type=\"submit\">Search</button>\n      </form>\n      </div>\n     \n      <div>\n      {loader && 'loading...'}\n      {recipe.map((x) => (\n        <div>\n         <Recipe key={x.recipe.label} title={x.recipe.label} img={x.recipe.image}\n         calories={x.recipe.calories} ingredients={x.recipe.ingredients}\n          />\n         </div>\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}